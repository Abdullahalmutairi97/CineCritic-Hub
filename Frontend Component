// MovieCard.jsx
import React, { useState } from 'react';
import { StarRating } from './StarRating';
import { ReviewModal } from './ReviewModal';

export const MovieCard = ({ movie }) => {
    const [showReviewModal, setShowReviewModal] = useState(false);
    
    return (
        <div className="movie-card">
            <img 
                src={movie.posterUrl || '/placeholder.jpg'} 
                alt={movie.title}
                className="movie-poster"
            />
            <div className="movie-info">
                <h3>{movie.title} ({movie.releaseYear})</h3>
                <div className="movie-meta">
                    <span>{movie.duration} mins</span>
                    <span>{movie.genres.join(', ')}</span>
                </div>
                <StarRating rating={movie.avgRating} />
                <button 
                    onClick={() => setShowReviewModal(true)}
                    className="review-button"
                >
                    Write Review
                </button>
            </div>
            
            {showReviewModal && (
                <ReviewModal 
                    movie={movie}
                    onClose={() => setShowReviewModal(false)}
                />
            )}
        </div>
    );
};

// StarRating.jsx
export const StarRating = ({ rating, interactive = false, onRate }) => {
    const [hover, setHover] = useState(0);
    
    return (
        <div className="star-rating">
            {[...Array(5)].map((_, i) => {
                const ratingValue = i + 1;
                return (
                    <span
                        key={i}
                        className={`star ${ratingValue <= (hover || rating) ? 'filled' : ''}`}
                        onClick={() => interactive && onRate(ratingValue)}
                        onMouseEnter={() => interactive && setHover(ratingValue)}
                        onMouseLeave={() => interactive && setHover(0)}
                    >
                        â˜…
                    </span>
                );
            })}
            {!interactive && <span>({rating.toFixed(1)})</span>}
        </div>
    );
};
